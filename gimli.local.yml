# gimli.local
# assume raspbian base image

- name: a playbook to configure gimli.local
  hosts: gimli.local
  become: true

  vars_files:
    - ~/.private/ansible/vars/me-myself-and-i.yml
    - vault_vars/gimli.local/main.yml

  handlers:
  - include: handlers/reboot.yml

  tasks:


# --------------------------
#   pi roles
# --------------------------

  - name: common raspberry pi config
    include_role:
      name: pi-common

  - name: raspberry pi packages
    include_role:
      name: pi-packages

# --------------------------
#   hardware related
# --------------------------

  - name: change graphics memory split
    lineinfile:
      dest: /boot/config.txt
      regexp: "^gpu_mem="
      line: "gpu_mem=256"
      state: present
    notify: reboot and wait

  - name: enable camera to enable advanced video codecs
    lineinfile:
      dest: /boot/config.txt
      regexp: "^start_x="
      line: "start_x=1"
      state: present
    notify: reboot and wait

  - name: pctv firmware (1)
    copy:
      src: firmware/pctv/dvb-demod-si2168-02.fw
      dest: /lib/firmware/dvb-demod-si2168-02.fw
    notify: reboot and wait

  - name: pctv firmware (2)
    copy:
      src: firmware/pctv/dvb-demod-si2168-b40-01.fw
      dest: /lib/firmware/dvb-demod-si2168-b40-01.fw
    notify: reboot and wait

  - name: Mount external disk
    include_role:
      name: mount-usb-disk


# --------------------------
#   reboot if we need to
# --------------------------

  - name: reboot if we need to
    meta: flush_handlers


# --------------------------
#   various roles
# --------------------------

  - name: Install and configure firewall
    include_role:
      name: ufw-firewall

  - name: Install and configure email
    include_role:
      name: email

  - name: Install and configure unattended upgrades
    include_role:
      name: unattended-upgrades

  - name: Install and configure restic backups
    include_role:
      name: restic-backups

  - name: logwatch
    include_role:
      name: logwatch

  - name: Install kodi mediacenter
    include_role:
      name: mediacenter

  - name: Install nordvpn
    include_role:
      name: nordvpn

  - name: make sure we dont start in a graphical environment
    command: systemctl set-default multi-user.target

# --------------------------
#   Mount media files over network
# --------------------------

  - name: create mountpoint
    file:
      path: /mnt/videos
      state: directory
      mode: 0777

  - name: mount network media shares
    lineinfile:
      dest: /etc/fstab
      regexp: "^//gollum.local/videos /mnt/videos cifs"
      line: "//gollum.local/videos /mnt/videos cifs x-systemd.automount,noauto,rw,iocharset=utf8,username=nas_admin,password=nas_admin_password,uid=pi,gid=pi,file_mode=0770,dir_mode=0770,vers=3.0 0 0"
      state: present


# --------------------------
#   forced reboot
# --------------------------

  - debug: msg="Trigger Reboot"
    notify: reboot and wait
    changed_when: true
