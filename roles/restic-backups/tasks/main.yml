---

- name: Check if restic binary exists
  stat:
    path: /usr/local/bin/{{restic_binary}}
  register: restic_result

- name: Download restic from github if it does not exist
  get_url:
    url: "https://github.com/restic/restic/releases/download/v{{restic_version}}/{{restic_binary}}.bz2"
    dest: "/usr/local/bin/"
  when: restic_result.stat.exists == False

- name: extract restic
  command: bunzip2 -f /usr/local/bin/{{restic_binary}}.bz2
  when: restic_result.stat.exists == False

- name: chmod +x restic
  file:
    dest: /usr/local/bin/{{restic_binary}}
    mode: "0755"
  when: restic_result.stat.exists == False

- name: create restic script
  template:
    src: restic
    dest: /usr/local/bin/restic
    mode: "0755"

- name: install restic password file
  copy:
    content: "{{restic_password}}"
    dest: "{{restic_password_file}}"
    mode: "0600"

- name: install restic environment file
  template:
    src: restic-environment
    dest: "{{restic_environment_file}}"
    mode: "0600"

- name: create backup scripts directory
  file:
    path: /etc/mybackup/scripts.d
    state: directory
    mode: 0755

- name: install backup script
  template:
    src: backup.sh
    dest: /etc/mybackup/backup.sh

- name: install backup conf
  template:
    src: backup.conf
    dest: /etc/mybackup/backup.conf

- name: install backup data scripts
  copy:
    src: files/{{item}}.sh
    dest: /etc/mybackup/scripts.d/{{item}}
    mode: "0755"
  with_items: "{{backup_scripts}}"

- name: install daily backup cron job
  cron:
    name: "daily backup"
    minute: "30"
    hour: "5"
    job: "/etc/mybackup/backup.sh >/dev/null 2>&1"
    cron_file: mybackup
    user: root

- name: install weekly purge cron script
  copy:
    src: files/restic-backup-prune.sh
    dest: /etc/cron.weekly/
    mode: "0755"
