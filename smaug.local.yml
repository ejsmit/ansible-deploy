# smaug.local
# assume raspbian base image

- name: a playbook to configure smaug.local
  hosts: smaug.local
  become: true
  vars_files:
    - ~/.private/ansible/vars/me-myself-and-i.yml
    - vault_vars/smaug.local.yml

  handlers:
  - include: handlers/reboot.yml

  tasks:

# --------------------------
#   pi roles
# --------------------------

  - name: common raspberry pi config
    include_role:
      name: pi-common

  - name: raspberry pi packages
    include_role:
      name: pi-packages


# --------------------------
#   host specific networking
# --------------------------

  - name: ipv6 hardware based address
    lineinfile:
      dest: /etc/dhcpcd.conf
      state: present
      backup: yes
      regexp: '^slaac'
      line: 'slaac hwaddr'
    notify: reboot and wait

  - name: force static ip address. Raspbian uses dhcpcd.conf
    blockinfile:
      path: /etc/dhcpcd.conf
      block: |
        interface {{ internal_interface }}
            static ip_address={{ static_ipv4_address }}
            static routers={{ static_gateway }}
            static domain_name_servers=127.0.0.1
    notify: reboot and wait


# --------------------------
#   reboot if we need to
# --------------------------

  - name: reboot if we need to
    meta: flush_handlers



# --------------------------
#   various roles
# --------------------------

  - name: Install and configure firewall
    include_role:
      name: ufw-firewall

  - name: Install and configure email
    include_role:
      name: email

  - name: Install and configure unattended upgrades
    include_role:
      name: unattended-upgrades

  - name: Install and configure restic backups
    include_role:
      name: restic-backups

  - name: Install and configure logwatch
    include_role:
      name: logwatch


# --------------------------
#   nightly reboots
# --------------------------

  - cron:
      name: "Auto reboot"
      minute: "3"
      hour: "3"
      job: "/sbin/shutdown -r now"
      cron_file: reboot
      user: root


# --------------------------
#   install pihole
# --------------------------

  - name: Install and configure pihole
    include_role:
      name: pihole


# --------------------------
#   forced reboot
# --------------------------

  - debug: msg="Trigger Reboot"
    notify: reboot and wait
    changed_when: true
